---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  generation: 125
  name: heat-test-report
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: heat-test-report
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: heat-test-report
    spec:
      containers:
        - name: heat-test-report
          image: #IMAGE_NAME
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              protocol: TCP
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: registry-secret-topjoy
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: timezone
        - name: app-logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: heat-test-report
spec:
  selector:
    app: heat-test-report
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/proxy-body-size: '0'
    ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  generation: 5
  name: ingress
spec:
  tls:
    - hosts:
        - heat-test-report.youle.game
      secretName: https-secret-youle-game
  rules:
    - host: heat-test-report.youle.game
      http:
        paths:
          - backend:
              serviceName: heat-test-report
              servicePort: 80
            path: /
---
kind: Secret
apiVersion: v1
metadata:
  name: https-secret-youle-game
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYrVENDQk9HZ0F3SUJBZ0lRQ29SVjc0L2luUGhucjdQTTBJOXp6akFOQmdrcWhraUc5dzBCQVFzRkFEQnUKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCMwpkM2N1WkdsbmFXTmxjblF1WTI5dE1TMHdLd1lEVlFRREV5UkZibU55ZVhCMGFXOXVJRVYyWlhKNWQyaGxjbVVnClJGWWdWRXhUSUVOQklDMGdSekV3SGhjTk1qSXdOVEkxTURBd01EQXdXaGNOTWpNd05USTJNak0xT1RVNVdqQVgKTVJVd0V3WURWUVFEREF3cUxubHZkV3hsTG1kaGJXVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBdwpnZ0VLQW9JQkFRQzl2R2xMbUViWk1keTB3bHFNcWFKWmRJRDFhYlR3ZS9uUzY1NEtNQ0o3VjArcDl6b1djbEpPCmZZQjRkcVlRU0c4VjcxRUlLTFducHdyTm55RGFmN2puV0tDRHBWdTluUHI3SkRXeGNGMHF0LzhVaHIwMHhjVXEKSlA5OFFFdW1ZQ01Uakk0ODhjSXFNRkZnWCtWU0hGQUZ6WHI5Y1RWdGxjZVZSSmtSTFl0NC96eGFaSW9Sazh6WQpLd0VFb3AxYkJOUzF0YXdrcmZncmFVR3ZYS21NY0p2eWdXQUhRRU93djBNd0N0SG1nZWZLQVl5MmFHSGExSnNrCmVBaTErYkFjYThmMTA2dmY5bjl0cksrbkxIdTVpc0Q5b1QyOExTbWtkRVV5eVBPNU9zZG50TGpPWktCMVZGWTEKZ3lLL3hvK3YxdFNWdWVITTUxVzRJeW1IM2RYNENQRHRBZ01CQUFHamdnTG9NSUlDNURBZkJnTlZIU01FR0RBVwpnQlJWZEUreWNrLzFZTHBRMGRmbVVWeWFBWWNhMXpBZEJnTlZIUTRFRmdRVXBSTXdsNi8zcFpWUUNac1MrT2s1CkNUUzBlZE13SXdZRFZSMFJCQnd3R29JTUtpNTViM1ZzWlM1bllXMWxnZ3A1YjNWc1pTNW5ZVzFsTUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdQZ1lEVlIwZwpCRGN3TlRBekJnWm5nUXdCQWdFd0tUQW5CZ2dyQmdFRkJRY0NBUlliYUhSMGNEb3ZMM2QzZHk1a2FXZHBZMlZ5CmRDNWpiMjB2UTFCVE1JR0FCZ2dyQmdFRkJRY0JBUVIwTUhJd0pBWUlLd1lCQlFVSE1BR0dHR2gwZEhBNkx5OXYKWTNOd0xtUnBaMmxqWlhKMExtTnZiVEJLQmdnckJnRUZCUWN3QW9ZK2FIUjBjRG92TDJOaFkyVnlkSE11WkdsbgphV05sY25RdVkyOXRMMFZ1WTNKNWNIUnBiMjVGZG1WeWVYZG9aWEpsUkZaVVRGTkRRUzFITVM1amNuUXdDUVlEClZSMFRCQUl3QURDQ0FYNEdDaXNHQVFRQjFua0NCQUlFZ2dGdUJJSUJhZ0ZvQUhZQXJmZSsrbnovRU1pTG5UMmMKSGo0WWFyUm5LVjNQc1F3a3lvV0dOT3ZjZ29vQUFBR0ErVHFNMndBQUJBTUFSekJGQWlBdDlQZjlweC9SeWtqTApoOUQwQnVMWFFHWmx0Sjhab2o3bU5EdUp0Nnl0N3dJaEFQV0Y4aEpiZ1QzRW9OV2MvOWRSb3k4a29WSWZMVEdGCmo0LzA2MHI5blI3dUFIVUFOYzhaRzcreGJGZS9ENjFNYlVMTHU3WW5JQ1pSNmovaEt1K29BOE03MWt3QUFBR0EKK1RxTXZnQUFCQU1BUmpCRUFpQS9WcWp0ZDNZbHlVallEekRGRkJVYkxma2ZkN0N6SFQ0L1YrZFU3VzFWN1FJZwpBcktwQWt6a2hBT05yK2VXb3l3NmkvbHp3Si9ZZWEvSFdCTWlWRmE4ZitvQWR3Q3pjM2NINFlSUStHT0cxZ1dwCjNCRUpTbmt0c1djTUM0ZmM4QU1PZVRhbG1nQUFBWUQ1T296N0FBQUVBd0JJTUVZQ0lRQ0dQVWtiVE9WM2p5eVcKU3MrSVQ4TytDNktJQmt4a2FqQnkrbGJwRG5IUVl3SWhBTkFCN1U0Q3cxTGkwY1NGcGgyNG5JdWgyUTBYcytMWgpxM2FNSXZXZk16SEFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNSbVkxZFgySU9aZlNidWNLM1MwSDJpdElxCkMrM3BhbFVrNXJtSlVMSzJKdkFhcTZ3TFBYalRkUlk4THBvTkRrU1RUSDJNaklzemFpdndMS1YwR3ZKellCSGoKWTlaTXBDQjgxWmZtWGdjUUJOR2Rmd3NPN3FTZi84YUxQWmJxZXhMS2lRSjMyaDlBdk5DOU1iU3F6eGM2S01oZApTbFRsK0d2cUpXWHBlTTJCdS9zeFJ2YmFnY1EyZCtYL0FLY1pwODBYWk44MDhudFhCMXJYVlhlNGZCb3N5SXM1ClRtanR1K3F3dFJlcmxuQWxMUEtvTm9adkt6UklHZzhwWjZIZXM5Wkl0Z2NzM01DcXo3OHdjS3B3dDJvL2lnV1EKNXFMbVBhZk5TTlp6REJmWkZ0eHlTV2JhUkFYTXZSaEsyM1VZWVhGRlhDSGpDdm1YdHZOOUgxRG1BUzBDCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVxakNDQTVLZ0F3SUJBZ0lRQW5tc1JZdkJza1dyK1lCVHpTeWJzVEFOQmdrcWhraUc5dzBCQVFzRkFEQmgKTVFzd0NRWURWUVFHRXdKVlV6RVZNQk1HQTFVRUNoTU1SR2xuYVVObGNuUWdTVzVqTVJrd0Z3WURWUVFMRXhCMwpkM2N1WkdsbmFXTmxjblF1WTI5dE1TQXdIZ1lEVlFRREV4ZEVhV2RwUTJWeWRDQkhiRzlpWVd3Z1VtOXZkQ0JEClFUQWVGdzB4TnpFeE1qY3hNalEyTVRCYUZ3MHlOekV4TWpjeE1qUTJNVEJhTUc0eEN6QUpCZ05WQkFZVEFsVlQKTVJVd0V3WURWUVFLRXd4RWFXZHBRMlZ5ZENCSmJtTXhHVEFYQmdOVkJBc1RFSGQzZHk1a2FXZHBZMlZ5ZEM1agpiMjB4TFRBckJnTlZCQU1USkVWdVkzSjVjSFJwYjI0Z1JYWmxjbmwzYUdWeVpTQkVWaUJVVEZNZ1EwRWdMU0JICk1UQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxQZVA2d2thYjQxZHlRaDZtS2MKb0hxdDNqUkl4VzVNRHZmOVF5aU9SN1ZmRndLNjU2ZXMwVUZpSWI3NE45cFJudHpGMVVnWXpER3UzcHBaVk1kbwpsYnhobTZkV1M5T0svbEZlaEtOVDBPWUk5YXFrNkYrVTdjQTZqeFNDK2lEQlBYd2RGNHJzM0tSeXAzYVFuNnBqCnBwMXlyN0lCNlk0enY3MkVlL1BsWi82cks2SW5DNldwSzBuUFZPWVI3bjlpRHVQZTFFNEl4VU1CSC9UMzMrM2gKeXVIM2R2ZmdpV1VPVWtqZHBNYnl4WCtYTmxlNXVFSWl5QnNpNEl2YmNUQ2g4cnVpZkNJaTVtRFhrWnJuTVQ4bgp3ZllDVjZ2NmtEZFhrYmdHUkxLc1I0cHVjYkp0YktxSWtVR3h1WkkydDdwZmV3S1JjNW5XZWN2REJaZjMrcDFNCnBBOENBd0VBQWFPQ0FVOHdnZ0ZMTUIwR0ExVWREZ1FXQkJSVmRFK3ljay8xWUxwUTBkZm1VVnlhQVljYTF6QWYKQmdOVkhTTUVHREFXZ0JRRDNsQTFWdEZNdTJid28rSWJHOE9Yc2ozUlZUQU9CZ05WSFE4QkFmOEVCQU1DQVlZdwpIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDCkFRQXdOQVlJS3dZQkJRVUhBUUVFS0RBbU1DUUdDQ3NHQVFVRkJ6QUJoaGhvZEhSd09pOHZiMk56Y0M1a2FXZHAKWTJWeWRDNWpiMjB3UWdZRFZSMGZCRHN3T1RBM29EV2dNNFl4YUhSMGNEb3ZMMk55YkRNdVpHbG5hV05sY25RdQpZMjl0TDBScFoybERaWEowUjJ4dlltRnNVbTl2ZEVOQkxtTnliREJNQmdOVkhTQUVSVEJETURjR0NXQ0dTQUdHCi9Xd0JBakFxTUNnR0NDc0dBUVVGQndJQkZoeG9kSFJ3Y3pvdkwzZDNkeTVrYVdkcFkyVnlkQzVqYjIwdlExQlQKTUFnR0JtZUJEQUVDQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUszR3A2L2FHcTdhQlpzeGYvb1ErVEQvQgpTd1czQVU0RVRLK0dRZjJrRnpZWmtieTVTRnJIZFBvbXVueDJIQnpWaVVjaEdvb2ZHZ2c3Z0hXMFczTWxRQVhXCk0wcjVMVXZTdGNyODJRRFdZTlBhVXk0dGFDUW15YUorVkIrNnd4SHN0U2lnT2xTTkYyYTZ2ZzRyZ2V4aXhlaVYKNFlTQjAzWXFwMnQzVGVaSE05RVNma3VzNzRuUXlXN3BSR2V6aitUQzQ0eENhZ0NRUU96ek5tekVBUDJTbkNySgpzTkUyRHBSVk1uTDhKNnhCUmRqbU9zQzNONmNRdUt1UlhiekJ5VkJqQ3FBQTh0MUwwSSs5d1hKZXJMUHlFcmp5CnJNS1dhQkZMbWZLL0FITkY0Wmlod1BHT2M3dzZVSGN6QlpYSDVSRnpKTm53dytXbkt1VFBJMEhmblZIOGxnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmJ4cFM1aEcyVEhjdE1KYWpLbWlXWFNBOVdtMDhIdjUwdXVlQ2pBaWUxZFBxZmM2CkZuSlNUbjJBZUhhbUVFaHZGZTlSQ0NpMXA2Y0t6WjhnMm4rNDUxaWdnNlZidlp6Nit5UTFzWEJkS3JmL0ZJYTkKTk1YRktpVC9mRUJMcG1BakU0eU9QUEhDS2pCUllGL2xVaHhRQmMxNi9YRTFiWlhIbFVTWkVTMkxlUDg4V21TSwpFWlBNMkNzQkJLS2RXd1RVdGJXc0pLMzRLMmxCcjF5cGpIQ2I4b0ZnQjBCRHNMOURNQXJSNW9IbnlnR010bWhoCjJ0U2JKSGdJdGZtd0hHdkg5ZE9yMy9aL2JheXZweXg3dVlyQS9hRTl2QzBwcEhSRk1zanp1VHJIWjdTNHptU2cKZFZSV05ZTWl2OGFQcjliVWxibmh6T2RWdUNNcGg5M1YrQWp3N1FJREFRQUJBb0lCQUNLOG9IQjVJQnQ2b0FRdQpBd0wydWFUMENmb2tVTDZvaS92OExES0VUb1BUWDkvbnhlZy9KT2QrM2Fyd1dnWG9KUUpZanJiV01TL1JDczdMCmYrblE4V3JWbEltVm1CNjJZMUxnZGI0WEtzOTc0VVVDU0JpbHpxdWhHMjlGbkRRSkxOTFM3R1duQTF2Uy9jc04KczMvZGRCOGoyQTBYa1djUFFYdUlGQmdMaFJueEczWkFKbE1kVjA1dXRiZS82bVBrYXB0eFgxa1FpOG9Oc1d1agpldHRoU01jYUU1TU9BWnBhaFV6OHhVUXl4Q093VUk3YnUzWVNmSHlZN1U5aXlNR1lHODRsVENMU2IwQkp0SDFkCnpIUU56ZlM2VVBNTFA3NFN0TUlHb3RFOTFJSzJMMUwydnRjNG9GMUNpVWZaWTBhd29xT2M3cDcxdFdJR3gzWHUKQXNkUUhXRUNnWUVBK0Y2OVJ6aSt5WGRFMlREN3EzWkVvUXBLRFVvV3pqZUlCby9Mek8rWGRJQWVFbW5FUGtBRQpGTGY1a1pqS1ZVYkpzell1U1pJaXpSRUJRWlJ4Qy9BUmFhME93aytDN2ZWRi9VMHF1V1VoazdtbkloZnM4eG9FClR4bm9VYXVmbFFac09Qc24wVENoQ1l6dnNITXRhanJxZm9VdWJFbGxQeEwwU3BuMnAyU3RmeDBDZ1lFQXc1Q08KRDh1RHoyQjQwNkxDQWJKc1hLNHZFQkJrTjNUSzFDWVFsdjhPQ3V4TFZCUENSRVJuS3ZBUFBYem1wSnRCRDc1MQpOY2ovN08wVkZSQ1Iwc3VGdnh5OWV6NXg3SDdncUhNOXY4WEdNTjdobHRFN3lsYkxicTdzMXk2eCttK21HWDZZCm5LajY5Rjlmei8rcTdWemJxbTY3STllQVB3bzZHQVVlQXRHNWdCRUNnWUFVbEJUdXI3N3ZCbGpIL2d6OEdlSjUKelZaeFgzQWdTZTJWVFppL05DTENYbE1maDIvaEVJREdEckE0NWdYdHB0M1RZV3ZZWUtsTmdGa3dTOUpLQU93UQphMnhMb1RiaDdHNk9IRFNzQTdzU2VGRm11OERBSzZtcnZDUEprSVM2WGp2ZFJNSDV6U09xbk9qSEgrUGxaMWhDCmYxcG5VblYzRW1UM1FXWjBYQjBiNlFLQmdDM0FUN3ZhUE1mekpkRTlMbTMvTStLcXpVL1F4ZUZEYllBY041MWIKcGdsZ0ptOVJBQTNBZ3ZKRW53d2ZnRVhhSEdwMmdDMUpETFo4OElXeERxeGwrTEF4SlJNRUZOcmpBK1Brc2ZsLwpaMUpma2g4YWJBWjJMN21CS3Q5Y2lUNnhpQVpHMjZVcTB5c0FkUVhRSmtqSmhJcG14VmtwUFZPQ0xQMFpsVi9MCmVMNUJBb0dCQUlHY1ZwWnp6QjVra25CanF1eHlZbnNkd3BULzB6ZFZxWVJvcXU3REdhRTFENlFqODd6UEVoZ0UKcVYrNkhGYWNPSU0rZlFOcGRSOG4rUU00ZU95UVFoVTJpQW9scHg4VXZWOGhkUlUvdHlqRC9FL1Z3bVlpZitubgpOaDFONjZFTFZkWkNuNEVoamU1QTlSSnBDZmJPZUErYVlBK0ZJdGNYc05mSlkvdmlwTXl0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
type: kubernetes.io/tls
